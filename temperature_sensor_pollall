#!/bin/bash
strtTme=$(date +%s.%N)
#################################
#
#  version: 0.1.0.0004
#  date: 17.11.2018
#  mod': 04.02.2019
#  Copyright Tommi Nikkilae 2018
#  url: http://f8.oire.fi/blog (techy things)
#  url: http://f8.oire.fi/ (my photos)
#  email: f8@oire.fi
#  Released under GNU GPLv3
#
#################################

# Use
#
	rootRequired=0
#
# if the script DOES NOT need elevated priviledges
# NOTE: user must explicitly define rootRequired=0
# or root priviledges will be needed!

#################################
#
#  Message for usage()
#  If one is not provided
#  we will look for one in the
#  directory defined in common.cfg
#  and provide that if found.
#
#IFS='' read -r -d '' usageMessage <<ENDMESSAGE
#A brief summary of the command and how it operates.
#$(/usr/bin/basename "$0") uses no parameters.
#NOTE! One must be provided still!
#ENDMESSAGE
#
# This ends usage() message [usageMessage]
#
#################################

#################################
#
#  Common variables
#  ALL common cofigurations
#  and functions, etc. go to:
#
#  /usr/local/etc/common.cfg
#
	source "/usr/local/etc/common.cfg"
#
#  for debugging, use 1 (or '--test')
#  for production, use 0
#  Default is '0'
	debug=1
#
#  If you want errors to kill the script, use
	errKills=1
#  else the exit code is just returned from function with
#	errKills=0
#  Default is '1'
#
#  Common variables end
#
#################################

#################################
#
#  Define if push notifications are sent or not
#
	push=0
#
#  Define the minimum time between push notifications
#
	minNotifyIntervalInMinutes=15
#
#################################

#################################
#
#  Set some more variables here
#	myVar1=foo
#	myVar2="Lorem ipsum."
	srcFile=/tmp/temps.php
	dstPath="/var/www/fs2/21/oirefi/heramaki/input"
	dstPath2="/var/www/include"
	dstPath3="/netstorage/heralan/share"
	localDSTFile="/netstorage/heralan/run/heraaccess/var/www/include/temps.php"
	webCamFile="/usr/local/share/fswebcam.banner.txt"
	csvFile="/netstorage/heralan/share/heratemps.csv"
	localCSVFile="/usr/local/share/heratemps.csv"
	res="0"
#
#
#################################

#################################
#
#  Functions begin here
#
#  Functions end. Your code starts here.
#
#################################

#################################
#
# Actual code part goes here...
#
OID=".1.3.6.1.2.1.25.1.11.1"
res="0"
mySensor1="/sys/bus/w1/devices/28-03170422eaff"

tempRaw=$(${SH_GREP} "t=" $mySensor1/w1_slave|${SH_CUT} -d "=" -f 2)
out=$(${SH_ECHO} "scale=1;$tempRaw/1000" | bc -l| ${SH_SED} 's/^\./0./'| ${SH_SED} 's/^-\./-0./')

#in=$(getDHTread "temp")
in=$(${SH_DHT}|${SH_CUT} -d " " -f 2)
#hum=$(getDHTread "hum")
hum=$(${SH_DHT}|${SH_CUT} -d " " -f 3)

msg="DS18B20: Temperature: $out"$'\xc2\xb0'"C .::. DHT22: Temperature: $in"$'\xc2\xb0'"C .::. DHT22: Humidity: $hum%"
msg2="Temperature (out): $out"$'\xc2\xb0'"C .::. Temperature (in): $in"$'\xc2\xb0'"C .::. Humidity (in): $hum%"
msg3="$sTime,$out,$in,$hum"

${SH_ECHO} "$msg2" > $webCamFile
${SH_ECHO} "$msg3" >> $localCSVFile

${SH_CAT} << TOFILE > $srcFile
<?php
\$cooptemp="$in";
\$heratemp="$out";
\$coophum="$hum";
\$temptime="$sConvTime";
?>
TOFILE

username="oirefi"
host="heramaki.fi"
transfer $srcFile $dstPath $username $host

username=pi
host=heraaccess
transfer $srcFile $dstPath2 $username $host
transfer $localCSVFile $dstPath3 $username $host

#[ -w "$localDSTFile" ] && ${SH_CP} -f $srcFile $localDSTFile || logThis "$localDSTFile is not writable."
#[ -w "$localCSVFile" ] && ${SH_CP} -f $localCSVFile $csvFile || logThis "$localCSVFile is not writable."

[ "$1" == "-p" ] && ${SH_ECHO} $msg
#
#################################

#################################
#
# End the script
#
scriptEnd
#
#################################

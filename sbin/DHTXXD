#!/bin/bash
strtTme=$(date +%s.%N)

#################################
#
#  version: 1.2.2.0004
#  date: 25.05.2018
#  mod': 04.02.2019
#  Copyright Tommi Nikkilae 2018-2019
#  url: http://f8.oire.fi/blog (techy things)
#  url: http://f8.oire.fi/ (my photos)
#  email: f8@oire.fi
#  Released under GNU GPLv3
#
#################################

# Use
#
	rootRequired=0
#
# if the script DOES NOT need elevated priviledges
# NOTE: user must explicitly define rootRequired=0
# or root priviledges will be needed!

#################################
#
#  Message for usage()
#  If one is not provided
#  we will look for one in the
#  directory defined in common.cfg
#  and provide that if found.
#
#	IFS='' read -r -d '' usageMessage <<ENDMESSAGE
#	A brief summary of the command and how it operates.
#	$(/usr/bin/basename "$0") uses no parameters.
#	NOTE! One must be provided still!
#	ENDMESSAGE
#
# This ends usage() message [usageMessage]
#
#################################

#################################
#
#  Common variables
#
#  for debugging, use 1 (or '--test')
#  for production, use 0
#  Default is '0'
	debug=0
	logging=0
#
#  ALL common configurations
#  and functions, etc. go to:
#
#  /usr/local/etc/common.cfg
#
	myPathIs=${0%/*}
	[ -f "$myPathIs/etc/common.cfg" ] && commonFile="$myPathIs/etc/common.cfg" || commonFile="/usr/local/etc/common.cfg"
	. "$commonFile"
#
#  If you want errors to kill the script, use
	errKills=1
#  else the exit code is just returned from function with
#	errKills=0
#  Default is '1'
#
#  Common variables end
#
#################################

#################################
#
#  Dependencies check
#  Use this function to check for files that should be available. If not
#  found, the script will err() (and usually die() if errKills is set to
#  > 0.
#
	checkDep "/usr/local/sbin/DHTXXD-exec"
#
#  Dependencies check end
#
################################

#################################
#
#  Define if push notifications are sent or not
#
	push=0
#
#  Define the minimum time between push notifications
#
	minNotifyIntervalInMinutes=15
#
#################################

#################################
#
#  Set some more variables here if needed
#	myVar1=foo
#	myVar2="Lorem ipsum."
	sleep=1.5
#
#################################

#################################
#
#  Functions begin here
#
#  Functions end. Your code starts here.
#
#################################

#################################
#
# Actual code part goes here...
#

dht22LockFile="/lockdir/dht22LockFile"

# Check for our lock file;
# If exists, wait: another script is accessing DHT22

i=0
maxWaitIters=10

while [ -f "$dht22LockFile" ]; do
	logThis "DHT22 busy, waiting ($i/$maxWaitIters)..."
	${SH_SLEEP} $sleep;
	(( i++ ))
	if [ "$i" -eq "$maxWaitIters" ]; then
		err 9 "$i"
		break
	fi
done

# Create lock file to prevent other scripts from
# accessing DHT22 while we poll it
logThis "Create lock file for DHT22."
${SH_TOUCH} $dht22LockFile

/usr/local/sbin/DHTXXD-exec

${SH_SLEEP} $sleep
${SH_RM} -f $dht22LockFile
logThis "Remove lock file for DHT22."

#
#################################

#################################
#
# End the script
#
	scriptEnd
#
#################################
